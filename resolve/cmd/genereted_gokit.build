# this is generated from main.go with github.com/go-kit/kit/... as an arg
go_module(
    name = "github.com.nats-io.nats.go",
    module = "github.com/nats-io/nats.go",
    version = "v1.11.0",
    install = [
        "encoders/builtin",
        "util",
        "",
    ],
    deps = [
        ":github.com.nats-io.nkeys",
        ":github.com.nats-io.nuid",
    ],
)
go_module(
    name = "github.com.go-logfmt.logfmt",
    module = "github.com/go-logfmt/logfmt",
    version = "v0.5.0",
)
go_module(
    name = "github.com.performancecopilot.speed",
    module = "github.com/performancecopilot/speed",
    version = "v3.0.0+incompatible",
    install = [
        "bytewriter",
        "",
    ],
    deps = [
        ":github.com.edsrzf.mmap-go",
        ":github.com.pkg.errors",
        ":github.com.codahale.hdrhistogram",
    ],
)
go_module(
    name = "github.com.edsrzf.mmap-go",
    module = "github.com/edsrzf/mmap-go",
    version = "v1.0.0",
    deps = [
        ":golang.org.x.sys",
    ],
)
go_module(
    name = "github.com.op.go-logging",
    module = "github.com/op/go-logging",
    version = "v0.0.0-20160315200505-970db520ece7",
)
go_module(
    name = "github.com.hashicorp.consul.api",
    module = "github.com/hashicorp/consul/api",
    version = "v1.8.1",
    deps = [
        ":github.com.hashicorp.go-cleanhttp",
        ":github.com.hashicorp.go-hclog",
        ":github.com.hashicorp.go-rootcerts",
        ":github.com.hashicorp.serf",
        ":github.com.mitchellh.mapstructure",
    ],
)
go_module(
    name = "github.com.aws.smithy-go",
    module = "github.com/aws/smithy-go",
    version = "v1.5.0",
    install = [
        "",
        "encoding/httpbinding",
        "encoding/xml",
        "io",
        "logging",
        "middleware",
        "ptr",
        "time",
        "transport/http",
        "waiter",
        "rand",
        "transport/http/internal/io",
        "encoding",
    ],
)
go_module(
    name = "github.com.matttproud.golang_protobuf_extensions",
    module = "github.com/matttproud/golang_protobuf_extensions",
    version = "v1.0.1",
    install = [
        "pbutil",
    ],
    deps = [
        ":github.com.golang.protobuf",
    ],
)
go_module(
    name = "github.com.golang.groupcache",
    module = "github.com/golang/groupcache",
    version = "v0.0.0-20200121045136-8c9f03a8e57e",
    install = [
        "lru",
    ],
)
go_module(
    name = "github.com.hashicorp.go-cleanhttp",
    module = "github.com/hashicorp/go-cleanhttp",
    version = "v0.5.1",
)
go_module(
    name = "github.com.beorn7.perks",
    module = "github.com/beorn7/perks",
    version = "v1.0.1",
    install = [
        "quantile",
    ],
)
go_module(
    name = "github.com.Knetic.govaluate",
    module = "github.com/Knetic/govaluate",
    version = "v3.0.1-0.20171022003610-9aa49832a739+incompatible",
)
go_module(
    name = "github.com.mattn.go-isatty",
    module = "github.com/mattn/go-isatty",
    version = "v0.0.12",
    deps = [
        ":golang.org.x.sys",
    ],
)
go_module(
    name = "github.com.hashicorp.serf",
    module = "github.com/hashicorp/serf",
    version = "v0.9.5",
    install = [
        "coordinate",
    ],
    deps = [
        ":github.com.armon.go-metrics",
    ],
)
go_module(
    name = "go.etcd.io.etcd.client.v3",
    module = "go.etcd.io/etcd/client/v3",
    version = "v3.5.0",
    install = [
        "credentials",
        "internal/endpoint",
        "internal/resolver",
        "",
    ],
    deps = [
        ":go.etcd.io.etcd.api.v3",
        ":go.etcd.io.etcd.client.pkg.v3",
        ":go.uber.org.zap",
        ":google.golang.org.grpc",
    ],
)
go_module(
    name = "google.golang.org.protobuf",
    module = "google.golang.org/protobuf",
    version = "v1.27.1",
    install = [
        "internal/flags",
        "reflect/protoreflect",
        "internal/detrand",
        "internal/errors",
        "internal/strs",
        "encoding/protowire",
        "proto",
        "runtime/protoimpl",
        "types/descriptorpb",
        "internal/descopts",
        "internal/filedesc",
        "internal/impl",
        "reflect/protoregistry",
        "internal/encoding/defval",
        "internal/pragma",
        "encoding/prototext",
        "internal/encoding/messageset",
        "internal/encoding/tag",
        "internal/genid",
        "internal/order",
        "runtime/protoiface",
        "internal/encoding/text",
        "internal/set",
        "reflect/protodesc",
        "types/known/durationpb",
        "types/known/timestamppb",
        "types/known/anypb",
        "internal/filetype",
        "internal/version",
        "internal/descfmt",
    ],
)
go_module(
    name = "github.com.hashicorp.go-hclog",
    module = "github.com/hashicorp/go-hclog",
    version = "v0.12.0",
    deps = [
        ":github.com.fatih.color",
        ":github.com.mattn.go-isatty",
    ],
)
go_module(
    name = "github.com.aws.aws-sdk-go-v2.service.cloudwatch",
    module = "github.com/aws/aws-sdk-go-v2/service/cloudwatch",
    version = "v1.5.0",
    install = [
        "internal/endpoints",
        "types",
        "",
    ],
    deps = [
        ":github.com.aws.aws-sdk-go-v2",
        ":github.com.aws.smithy-go",
        ":github.com.jmespath.go-jmespath",
    ],
)
go_module(
    name = "go.uber.org.multierr",
    module = "go.uber.org/multierr",
    version = "v1.6.0",
    deps = [
        ":go.uber.org.atomic",
    ],
)
go_module(
    name = "gopkg.in.warnings.v0",
    module = "gopkg.in/warnings.v0",
    version = "v0.1.2",
)
go_module(
    name = "github.com.coreos.go-systemd.v22",
    module = "github.com/coreos/go-systemd/v22",
    version = "v22.3.2",
    install = [
        "journal",
    ],
)
go_module(
    name = "github.com.go-zookeeper.zk",
    module = "github.com/go-zookeeper/zk",
    version = "v1.0.2",
)
go_module(
    name = "github.com.pkg.errors",
    module = "github.com/pkg/errors",
    version = "v0.9.1",
)
go_module(
    name = "go.etcd.io.etcd.api.v3",
    module = "go.etcd.io/etcd/api/v3",
    version = "v3.5.0",
    install = [
        "authpb",
        "etcdserverpb",
        "mvccpb",
        "v3rpc/rpctypes",
        "version",
        "membershippb",
    ],
    deps = [
        ":github.com.coreos.go-semver",
        ":github.com.gogo.protobuf",
        ":github.com.golang.protobuf",
        ":google.golang.org.grpc",
        ":google.golang.org.genproto",
    ],
)
go_module(
    name = "github.com.hashicorp.golang-lru",
    module = "github.com/hashicorp/golang-lru",
    version = "v0.5.0",
    install = [
        "simplelru",
    ],
)
go_module(
    name = "github.com.afex.hystrix-go",
    module = "github.com/afex/hystrix-go",
    version = "v0.0.0-20180502004556-fa1af6a1f4f5",
    install = [
        "hystrix",
        "hystrix/metric_collector",
        "hystrix/rolling",
    ],
)
go_module(
    name = "github.com.dgrijalva.jwt-go",
    module = "github.com/dgrijalva/jwt-go",
    version = "v3.2.0+incompatible",
)
go_module(
    name = "github.com.sony.gobreaker",
    module = "github.com/sony/gobreaker",
    version = "v0.4.1",
)
go_module(
    name = "golang.org.x.sys",
    module = "golang.org/x/sys",
    version = "v0.0.0-20210603081109-ebe580a85c40",
    install = [
        "unix",
        "internal/unsafeheader",
    ],
)
go_module(
    name = "github.com.aws.aws-sdk-go-v2",
    module = "github.com/aws/aws-sdk-go-v2",
    version = "v1.7.0",
    install = [
        "aws",
        "aws/middleware",
        "aws/protocol/query",
        "aws/protocol/xml",
        "aws/retry",
        "aws/signer/v4",
        "aws/transport/http",
        "internal/rand",
        "internal/sdk",
        "internal/strings",
        "internal/endpoints",
        "aws/ratelimit",
        "internal/timeconv",
        "aws/signer/internal/v4",
        "internal/sync/singleflight",
    ],
    deps = [
        ":github.com.aws.smithy-go",
    ],
)
go_module(
    name = "github.com.gogo.protobuf",
    module = "github.com/gogo/protobuf",
    version = "v1.3.2",
    install = [
        "gogoproto",
        "proto",
        "protoc-gen-gogo/descriptor",
    ],
)
go_module(
    name = "github.com.prometheus.procfs",
    module = "github.com/prometheus/procfs",
    version = "v0.6.0",
    install = [
        "internal/fs",
        "internal/util",
        "",
    ],
    deps = [
        ":golang.org.x.sys",
    ],
)
go_module(
    name = "go.uber.org.zap",
    module = "go.uber.org/zap",
    version = "v1.17.0",
    install = [
        "",
        "zapcore",
        "zapgrpc",
        "internal/bufferpool",
        "buffer",
        "internal/color",
        "internal/exit",
    ],
    deps = [
        ":go.uber.org.atomic",
        ":go.uber.org.multierr",
    ],
)
go_module(
    name = "github.com.coreos.go-semver",
    module = "github.com/coreos/go-semver",
    version = "v0.3.0",
    install = [
        "semver",
    ],
)
go_module(
    name = "golang.org.x.sync",
    module = "golang.org/x/sync",
    version = "v0.0.0-20210220032951-036812b2e83c",
    install = [
        "errgroup",
    ],
)
go_module(
    name = "golang.org.x.text",
    module = "golang.org/x/text",
    version = "v0.3.5",
    install = [
        "transform",
        "unicode/bidi",
        "secure/bidirule",
        "unicode/norm",
    ],
)
go_module(
    name = "github.com.nats-io.nkeys",
    module = "github.com/nats-io/nkeys",
    version = "v0.3.0",
    deps = [
        ":golang.org.x.crypto",
    ],
)
go_module(
    name = "github.com.modern-go.reflect2",
    module = "github.com/modern-go/reflect2",
    version = "v1.0.1",
    deps = [
        ":github.com.modern-go.concurrent",
    ],
)
go_module(
    name = "github.com.codahale.hdrhistogram",
    module = "github.com/codahale/hdrhistogram",
    version = "v0.0.0-20161010025455-3a0bb77429bd",
)
go_module(
    name = "github.com.opentracing.opentracing-go",
    module = "github.com/opentracing/opentracing-go",
    version = "v1.2.0",
    install = [
        "log",
        "",
        "ext",
    ],
)
go_module(
    name = "github.com.streadway.handy",
    module = "github.com/streadway/handy",
    version = "v0.0.0-20200128134331-0f66f006fb2e",
    install = [
        "breaker",
    ],
)
go_module(
    name = "github.com.clbanning.x2j",
    module = "github.com/clbanning/x2j",
    version = "v0.0.0-20191024224557-825249438eec",
)
go_module(
    name = "go.opencensus.io",
    module = "go.opencensus.io",
    version = "v0.23.0",
    install = [
        "",
        "internal",
        "trace/internal",
        "trace/tracestate",
        "resource",
        "plugin/ochttp/propagation/b3",
        "stats",
        "stats/view",
        "tag",
        "trace",
        "trace/propagation",
        "internal/tagencoding",
        "metric/metricdata",
        "metric/metricproducer",
        "stats/internal",
        "plugin/ochttp",
    ],
    deps = [
        ":github.com.golang.groupcache",
    ],
)
go_module(
    name = "github.com.hashicorp.go-immutable-radix",
    module = "github.com/hashicorp/go-immutable-radix",
    version = "v1.0.0",
    deps = [
        ":github.com.hashicorp.golang-lru",
    ],
)
go_module(
    name = "github.com.fatih.color",
    module = "github.com/fatih/color",
    version = "v1.9.0",
    deps = [
        ":github.com.mattn.go-colorable",
        ":github.com.mattn.go-isatty",
    ],
)
go_module(
    name = "github.com.casbin.casbin.v2",
    module = "github.com/casbin/casbin/v2",
    version = "v2.31.6",
    install = [
        "effector",
        "errors",
        "log",
        "model",
        "persist",
        "persist/file-adapter",
        "rbac",
        "rbac/default-role-manager",
        "util",
        "config",
        "",
    ],
    deps = [
        ":github.com.Knetic.govaluate",
    ],
)
go_module(
    name = "github.com.aws.aws-sdk-go",
    module = "github.com/aws/aws-sdk-go",
    version = "v1.38.68",
    install = [
        "aws/awserr",
        "internal/ini",
        "internal/shareddefaults",
        "internal/sync/singleflight",
        "aws",
        "aws/client/metadata",
        "aws/request",
        "internal/sdkrand",
        "private/protocol",
        "aws/credentials",
        "aws/endpoints",
        "internal/sdkio",
        "aws/awsutil",
        "aws/client",
        "aws/signer/v4",
        "private/protocol/query",
        "internal/strings",
        "private/protocol/rest",
        "service/cloudwatch",
        "service/cloudwatch/cloudwatchiface",
        "private/protocol/query/queryutil",
        "private/protocol/xml/xmlutil",
        "internal/sdkmath",
    ],
    deps = [
        ":github.com.jmespath.go-jmespath",
    ],
)
go_module(
    name = "github.com.jmespath.go-jmespath",
    module = "github.com/jmespath/go-jmespath",
    version = "v0.4.0",
)
go_module(
    name = "github.com.mitchellh.mapstructure",
    module = "github.com/mitchellh/mapstructure",
    version = "v1.1.2",
)
go_module(
    name = "github.com.golang.protobuf",
    module = "github.com/golang/protobuf",
    version = "v1.5.2",
    install = [
        "proto",
        "ptypes",
        "ptypes/timestamp",
        "ptypes/any",
        "ptypes/duration",
    ],
    deps = [
        ":google.golang.org.protobuf",
    ],
)
go_module(
    name = "github.com.sirupsen.logrus",
    module = "github.com/sirupsen/logrus",
    version = "v1.8.1",
    deps = [
        ":golang.org.x.sys",
    ],
)
go_module(
    name = "github.com.armon.go-metrics",
    module = "github.com/armon/go-metrics",
    version = "v0.0.0-20180917152333-f0300d1749da",
    deps = [
        ":github.com.hashicorp.go-immutable-radix",
    ],
)
go_module(
    name = "github.com.mattn.go-colorable",
    module = "github.com/mattn/go-colorable",
    version = "v0.1.6",
    deps = [
        ":github.com.mattn.go-isatty",
    ],
)
go_module(
    name = "google.golang.org.grpc",
    module = "google.golang.org/grpc",
    version = "v1.38.0",
    install = [
        "encoding",
        "metadata",
        "resolver",
        "codes",
        "connectivity",
        "credentials",
        "grpclog",
        "",
        "keepalive",
        "status",
        "internal/serviceconfig",
        "attributes",
        "serviceconfig",
        "balancer",
        "balancer/base",
        "internal/grpcrand",
        "backoff",
        "binarylog/grpc_binarylog_v1",
        "internal/grpcutil",
        "internal/channelz",
        "internal/credentials",
        "internal/syscall",
        "internal/transport/networktype",
        "peer",
        "stats",
        "tap",
        "internal/status",
        "resolver/manual",
        "balancer/roundrobin",
        "encoding/proto",
        "internal",
        "internal/backoff",
        "internal/balancerload",
        "internal/binarylog",
        "internal/buffer",
        "internal/envconfig",
        "internal/grpcsync",
        "internal/resolver",
        "internal/resolver/dns",
        "internal/resolver/passthrough",
        "internal/resolver/unix",
        "internal/transport",
        "internal/grpclog",
        "balancer/grpclb/state",
    ],
    deps = [
        ":github.com.golang.protobuf",
        ":google.golang.org.genproto",
        ":golang.org.x.sys",
        ":golang.org.x.net",
        ":google.golang.org.protobuf",
    ],
)
go_module(
    name = "go.etcd.io.etcd.client.pkg.v3",
    module = "go.etcd.io/etcd/client/pkg/v3",
    version = "v3.5.0",
    install = [
        "fileutil",
        "tlsutil",
        "logutil",
        "types",
        "systemd",
        "pathutil",
        "srv",
        "transport",
    ],
    deps = [
        ":go.uber.org.zap",
        ":golang.org.x.sys",
        ":github.com.coreos.go-systemd.v22",
    ],
)
go_module(
    name = "github.com.prometheus.client_model",
    module = "github.com/prometheus/client_model",
    version = "v0.2.0",
    install = [
        "go",
    ],
    deps = [
        ":github.com.golang.protobuf",
    ],
)
go_module(
    name = "gopkg.in.gcfg.v1",
    module = "gopkg.in/gcfg.v1",
    version = "v1.2.3",
    install = [
        "token",
        "",
        "scanner",
        "types",
    ],
    deps = [
        ":gopkg.in.warnings.v0",
    ],
)
go_module(
    name = "go.etcd.io.etcd.client.v2",
    module = "go.etcd.io/etcd/client/v2",
    version = "v2.305.0",
    deps = [
        ":github.com.json-iterator.go",
        ":github.com.modern-go.reflect2",
        ":go.etcd.io.etcd.api.v3",
        ":go.etcd.io.etcd.client.pkg.v3",
    ],
)
go_module(
    name = "github.com.cespare.xxhash.v2",
    module = "github.com/cespare/xxhash/v2",
    version = "v2.1.1",
)
go_module(
    name = "github.com.nats-io.nuid",
    module = "github.com/nats-io/nuid",
    version = "v1.0.1",
)
go_module(
    name = "github.com.openzipkin.zipkin-go",
    module = "github.com/openzipkin/zipkin-go",
    version = "v0.2.5",
    install = [
        "model",
        "",
        "propagation/b3",
        "idgenerator",
        "propagation",
        "reporter",
    ],
    deps = [
        ":google.golang.org.grpc",
    ],
)
go_module(
    name = "golang.org.x.net",
    module = "golang.org/x/net",
    version = "v0.0.0-20210405180319-a5a99cb37ef4",
    install = [
        "bpf",
        "internal/iana",
        "internal/socket",
        "idna",
        "ipv4",
        "ipv6",
        "http2",
        "http2/hpack",
        "trace",
        "http/httpguts",
        "internal/timeseries",
    ],
    deps = [
        ":golang.org.x.sys",
        ":golang.org.x.text",
    ],
)
go_module(
    name = "github.com.miekg.dns",
    module = "github.com/miekg/dns",
    version = "v1.1.26",
    deps = [
        ":golang.org.x.crypto",
        ":golang.org.x.net",
        ":golang.org.x.sys",
    ],
)
go_module(
    name = "github.com.prometheus.common",
    module = "github.com/prometheus/common",
    version = "v0.26.0",
    install = [
        "internal/bitbucket.org/ww/goautoneg",
        "model",
        "expfmt",
    ],
    deps = [
        ":github.com.golang.protobuf",
        ":github.com.matttproud.golang_protobuf_extensions",
        ":github.com.prometheus.client_model",
    ],
)
go_module(
    name = "github.com.cenkalti.backoff",
    module = "github.com/cenkalti/backoff",
    version = "v2.2.1+incompatible",
)
go_module(
    name = "go.uber.org.atomic",
    module = "go.uber.org/atomic",
    version = "v1.7.0",
)
go_module(
    name = "github.com.hudl.fargo",
    module = "github.com/hudl/fargo",
    version = "v1.3.0",
    deps = [
        ":github.com.cenkalti.backoff",
        ":github.com.clbanning.x2j",
        ":github.com.franela.goreq",
        ":github.com.miekg.dns",
        ":github.com.op.go-logging",
        ":gopkg.in.gcfg.v1",
    ],
)
go_module(
    name = "github.com.json-iterator.go",
    module = "github.com/json-iterator/go",
    version = "v1.1.11",
    deps = [
        ":github.com.modern-go.concurrent",
        ":github.com.modern-go.reflect2",
    ],
)
go_module(
    name = "github.com.go-kit.kit",
    module = "github.com/go-kit/kit",
    version = "v0.11.0",
    install = [
        "metrics",
        "log",
        "metrics/internal/lv",
        "transport/http",
        "metrics/internal/convert",
        "endpoint",
        "sd",
        "sd/internal/instance",
        "metrics/generic",
        "metrics/internal/ratemap",
        "util/conn",
        "sd/lb",
        "transport/grpc",
        "transport",
        "metrics/discard",
        "metrics/dogstatsd",
        "metrics/expvar",
        "metrics/graphite",
        "metrics/influx",
        "metrics/prometheus",
        "metrics/statsd",
        "log/level",
        "transport/http/jsonrpc",
    ],
    deps = [
        ":github.com.prometheus.client_golang",
        ":google.golang.org.protobuf",
        ":github.com.aws.aws-sdk-go-v2",
        ":github.com.aws.aws-sdk-go-v2.service.cloudwatch",
        ":golang.org.x.sync",
        ":github.com.afex.hystrix-go",
        ":github.com.sony.gobreaker",
        ":github.com.streadway.handy",
        ":github.com.go-zookeeper.zk",
        ":github.com.sirupsen.logrus",
        ":github.com.hudl.fargo",
        ":github.com.opentracing.opentracing-go",
        ":google.golang.org.grpc",
        ":github.com.openzipkin.zipkin-go",
        ":github.com.streadway.amqp",
        ":github.com.aws.aws-sdk-go",
        ":github.com.influxdata.influxdb1-client",
        ":github.com.nats-io.nats.go",
        ":github.com.casbin.casbin.v2",
        ":github.com.VividCortex.gohistogram",
        ":go.etcd.io.etcd.client.pkg.v3",
        ":go.etcd.io.etcd.client.v3",
        ":github.com.hashicorp.consul.api",
        ":github.com.go-logfmt.logfmt",
        ":github.com.performancecopilot.speed",
        ":github.com.dgrijalva.jwt-go",
        ":go.uber.org.zap",
        ":go.etcd.io.etcd.client.v2",
        ":go.opencensus.io",
    ],
)
go_module(
    name = "github.com.streadway.amqp",
    module = "github.com/streadway/amqp",
    version = "v1.0.0",
)
go_module(
    name = "google.golang.org.genproto",
    module = "google.golang.org/genproto",
    version = "v0.0.0-20210602131652-f16073e35f0c",
    install = [
        "googleapis/rpc/status",
        "googleapis/api/annotations",
    ],
    deps = [
        ":github.com.golang.protobuf",
        ":google.golang.org.protobuf",
    ],
)
go_module(
    name = "golang.org.x.crypto",
    module = "golang.org/x/crypto",
    version = "v0.0.0-20210314154223-e6e6c4f2bb5b",
    install = [
        "ed25519",
    ],
)
go_module(
    name = "github.com.influxdata.influxdb1-client",
    module = "github.com/influxdata/influxdb1-client",
    version = "v0.0.0-20200827194710-b269163b24ab",
    install = [
        "pkg/escape",
        "models",
        "v2",
    ],
)
go_module(
    name = "github.com.hashicorp.go-rootcerts",
    module = "github.com/hashicorp/go-rootcerts",
    version = "v1.0.2",
)
go_module(
    name = "github.com.modern-go.concurrent",
    module = "github.com/modern-go/concurrent",
    version = "v0.0.0-20180306012644-bacd9c7ef1dd",
)
go_module(
    name = "github.com.prometheus.client_golang",
    module = "github.com/prometheus/client_golang",
    version = "v1.11.0",
    install = [
        "prometheus",
        "prometheus/internal",
    ],
    deps = [
        ":github.com.prometheus.client_model",
        ":github.com.beorn7.perks",
        ":github.com.cespare.xxhash.v2",
        ":github.com.golang.protobuf",
        ":github.com.prometheus.common",
        ":github.com.prometheus.procfs",
    ],
)
go_module(
    name = "github.com.franela.goreq",
    module = "github.com/franela/goreq",
    version = "v0.0.0-20171204163338-bcd34c9993f8",
)
go_module(
    name = "github.com.VividCortex.gohistogram",
    module = "github.com/VividCortex/gohistogram",
    version = "v1.0.0",
)
